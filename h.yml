name: CI/CD Pipeline

on:
  push:
    branches:
      - Main  # The name of the github branch that triggers the CI/CD pipeline (case-sensitive).

jobs:
  build:
    runs-on: ubuntu-latest  # Specifies the environment in which the job will run. Here, it's set to the latest version of Ubuntu.

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2  # This action checks out your repository so the workflow can access its contents.
        # You can use version v3 if any issues arise with v2.

      - name: Set up Node.js
        uses: actions/setup-node@v2  # Sets up a Node.js environment for your project.
        with:
          node-version: '20'  # Specify the Node.js version you want to use. Update this when you encounter any version issues.
          # You can switch to version v3 if needed.

      - name: Install Dependencies
        run: npm install  # Runs npm install to install all the dependencies listed in your package.json file.

      - name: Run Playwright Tests
        run: |  # This block runs Playwright tests to ensure your application is functioning correctly.
          npx playwright install  # Installs Playwright browsers required for testing.
          npx playwright test testCode.spec.js --project=chromium  # Executes the specified Playwright tests using the Chromium browser.

      - name: Setup SSH key
        run: |  # This block sets up the SSH key for secure access to your EC2 instance.
          mkdir -p ~/.ssh  # Creates the .ssh directory if it does not exist (useful if you encounter a "no directory exist" error).
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa  # Adds the EC2 SSH key from GitHub Secrets to the id_rsa file.
          chmod 600 ~/.ssh/id_rsa  # Sets the file permission to read/write for the owner only, enhancing security.

      - name: Deploy to EC2
        run: |  # This block connects to your EC2 instance and deploys the updated code.
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@3.82.9.161 "  # Replace with your EC2 instance's public IP address.
            cd /home/ubuntu/CI_CD-Pipeline-Setup &&  # Navigate to the directory where your application is hosted (replace with your application path).
            rm -rf .github/workflows/ci-cd.yml &&  # Removes the existing CI/CD configuration file.
            git pull &&  # Pulls the latest changes from the repository.
            pm2 restart server.js  # Restarts the Node.js application managed by PM2 to apply the changes.
          "
        env:
          SSH_AUTH_SOCK: /tmp/ssh_auth_sock  # Sets the environment variable for SSH agent forwarding.
